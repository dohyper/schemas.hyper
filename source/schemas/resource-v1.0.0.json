{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "http://schemas.hyper.mathematikoi.co/resource-v1.0.0.json",
    "$vocabulary": {
      "https://json-schema.org/draft/2020-12/vocab/core": true,
      "https://json-schema.org/draft/2020-12/vocab/applicator": true,
      "https://json-schema.org/draft/2020-12/vocab/validation": true,
      "https://json-schema.org/draft/2020-12/vocab/meta-data": true
    },
    "type": "object",
    "properties": {
      "$id": {
        "type": "string",
        "format": "uri"
      },
      "$schema": {
        "type": "string",
        "format": "uri"
      },
      "type": {
        "type": "string",
        "const": "object"
      },
      "properties": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "applicability": {
            "$ref": "#/$defs/applicability"
          },
          "properties": {
            "$ref": "#/$defs/properties"
          },
          "relations": {
            "$ref": "#/$defs/relations"
          },
          "controllers": {
            "$ref": "#/$defs/controllers"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1
          }
        },
        "required": ["name"],
        "anyOf": [
          {
            "required": ["properties"]
          },
          {
            "required": ["relations"]
          }
        ]
      }
    },
    "$defs": {
      "applicability": {
        "type": "object",
        "properties": {
          "create": {
            "$ref": "#/$defs/operation"
          },
          "read": {
            "type": "boolean"
          },
          "update": {
            "$ref": "#/$defs/operation"
          },
          "delete": {
            "$ref": "#/$defs/operation"
          }
        },
        "unevaluatedProperties": false
      },
      "properties": {
        "type": "object",
        "patternProperties": {
          "^[a-zA-Z0-9_]+$": {
            "$ref": "https://json-schema.org/draft/2020-12/schema"
          }
        },
        "minProperties": 1
      },
      "relations": {
        "type": "object",
        "patternProperties": {
          "^[a-zA-Z0-9_]+$": {
            "$ref": "#/$defs/relation"
          }
        },
        "minProperties": 1
      },
      "controllers": {
        "type": "object",
        "patternProperties": {
          "^[a-zA-Z0-9_]+$": {
            "$ref": "#/$defs/controller"
          }
        }
      },
      "operation": {
        "anyOf": [
          {
            "type": "boolean"
          },
          {
            "type": "object",
            "properties": {
              "transactional": {
                "type": "boolean"
              }
            },
            "required": ["transactional"],
            "unevaluatedProperties": false
          }
        ]
      },
      "relation": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string"
          },
          "cardinality": {
            "type": "string",
            "enum": ["to-one", "to-many"]
          },
          "bidirectionality": {
            "$ref": "#/$defs/bidirectionality"
          },
          "constraints": {
            "$ref": "#/$defs/constraints"
          }
        },
        "required": ["resource", "cardinality"]
      },
      "controller": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": ["GET", "POST", "PUT", "DELETE", "PATCH"],
            "default": "POST"
          },
          "type": {
            "type": "string",
            "enum": ["collection", "object"]
          },
          "input": {
            "$ref": "https://json-schema.org/draft/2020-12/schema"
          },
          "transactional": {
            "type": "boolean"
          }
        },
        "required": ["type", "input"]
      },
      "bidirectionality": {
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "projection": {
            "$ref": "#/$defs/projection"
          }
        },
        "required": ["relation"]
      },
      "projection": {
        "$ref": "#/$defs/relation"
      },
      "constraints": {
        "type": "object",
        "properties": {
          "unique": {
            "type": "boolean"
          }
        },
        "unevaluatedProperties": false
      }
    }
  }
